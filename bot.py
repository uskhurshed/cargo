import logging
import pandas as pd
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è
try:
    data = pd.read_csv('data.csv', encoding='latin1', delimiter=';')
    logger.info("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ data.csv")
except Exception as e:
    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ data.csv: {e}")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        ["–°—É—Ä–æ–≥–∞–∏ —Å–∫–ª–∞–¥ —Ä–æ“≥  üöö", "–°—É—Ä–æ–≥–∞–∏ —Å–∫–ª–∞–¥ –∞–≤–∏–∞‚úàÔ∏è", "–ù–∞—Ä—Ö–Ω–æ–º–∞ üí≤"],
        ["–ú–æ–ª“≥–æ–∏ –º–∞–Ω—ä—à—É–¥–∞ ‚ùå", "–ö–æ–Ω—Ç–∞–∫—Ç üë§"],
        ["–¢–∞—Ñ—Ç–∏—à–∏ —Ç—Ä–µ–∫-–∫–æ–¥ üîç", "–î–∞—Ä—Å–∏ —Ä–æ–π–≥–æ–Ω!"]
    ]

    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

    await update.message.reply_text('–•—É—à –æ–º–∞–¥–µ–¥ –±–∞ Telegram –±–æ—Ç–∏  –°–æ–º–æ–Ω –°—É–≥–¥ –ö–∞—Ä–≥–æ. –ú–∞–Ω –±–∞ —à—É–º–æ –¥–∞—Ä —ë—Ñ—Ç–∞–Ω–∏ —Å—É—Ä–æ“ì–∞“≥–æ–∏ –∞–Ω–±–æ—Ä, —Å–∞–Ω“∑–∏–¥–∞–Ω–∏ —Ç—Ä–µ–∫ –∫–æ–¥ –≤–∞ –±–æ –Ω–∞—Ä—Ö“≥–æ —à–∏–Ω–æ—Å —à—É–¥–∞–Ω –∫”Ø–º–∞–∫ –º–µ–∫—É–Ω–∞–º', reply_markup=reply_markup)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–æ–∫
async def handle_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    text = update.message.text

    if text == "–°—É—Ä–æ–≥–∞–∏ —Å–∫–ª–∞–¥ —Ä–æ“≥  üöö":
        response = "1) AL-KH \n2)13711652794\n3) ÂπøÂ∑ûÂ∏ÇËçîÊπæÂå∫ÁéØÂ∏ÇË•øË∑ØÈªëÂ±±‰∏âË°ó20Âè∑ÂÆáÂÆôÈûãÂüéEÂå∫113-119Ê°£8 Al-Kh /–®–∞—Ö—Ä/–ù–æ–º –≤–∞ –Ω–æ–º–µ—Ä–∏ —Ç–µ–ª–µ—Ñ–æ–Ω"
        await update.message.reply_text(response)
        await update.message.reply_photo("https://raw.githubusercontent.com/uskhurshed/cargo/master/photo_2024-10-08_19-49-26.jpg")

    if text == "–°—É—Ä–æ–≥–∞–∏ —Å–∫–ª–∞–¥ –∞–≤–∏–∞‚úàÔ∏è":
        response = "Avia / –ù–æ–º –í–ê –Ω–æ–º–µ—Ä–∏ —à—É–º–æ \n19068507113\nÊµôÊ±üÁúÅ ÈáëÂçéÂ∏Ç ‰πâ‰πåÂ∏Ç\nÊ°•‰∏ú‰∫åÂå∫34Ê†ã8Âè∑ 1 avia Al-Kh / –®–∞—Ö—Ä –ù–æ–º –í–ê –Ω–µ–º–µ—Ä–∏ —à—É–º–æ"
        await update.message.reply_text(response)
        await update.message.reply_photo("https://raw.githubusercontent.com/uskhurshed/cargo/master/photo_5406973989118667037_y.jpg")


    elif text == "–ù–∞—Ä—Ö–Ω–æ–º–∞ üí≤":
        response = "–†–û“≤/n/n> –ê–∑ 1–∫–≥ —Ç–æ 40–∫–≥  - 3$ /n> –ê–∑ 40–∫–≥ –∑–∏—ë–¥  - 2,8$/n> –ê–∑ 100–∫–≥ –∑–∏—ë–¥ –∞–ª–æ—Ö–∏–¥–∞ –Ω–∞—Ä—Ö –¥–æ–¥–∞ –º–µ—à–∞–≤–∞–¥/n> –ê–∑ 1–∫—É–± 300$/n/n–ê–í–ò–ê/n/n–°—Ä–æ–∫ –¥–æ—Å—Ç–∞–≤–∫–∏: 7-13 –¥–Ω–µ–π üöÄ/n‚Ä¢ 10$/–∫–≥/n‚Ä¢ –î–æ 31.12.2024 ‚Äî –≤—Å–µ–≥–æ 9$/–∫–≥ üéâ"
        await update.message.reply_text(response)
        await update.message.reply_photo("https://raw.githubusercontent.com/uskhurshed/cargo/master/–ù–∞—Ä—Ö2.png")

    elif text == "–ú–æ–ª“≥–æ–∏ –º–∞–Ω—ä—à—É–¥–∞ ‚ùå":
        response = "–ó–ê–ü–†–ï–©–ï–ù–ù–´–ï –¢–û–í–ê–†–´/n–ù–ï–õ–¨–ó–Ø üö´ –ó–ê–ö–ê–ó–ê–¢–¨ –ò–ó –ö–ò–¢–ê–Ø , –î–ê–ù–ù–´–ô –ú–û–ú–ï–ù–¢ –ü–†–û–í–ï–†–ö–ê –ò–î–ï–¢ –¢–©–ê–¢–ï–õ–¨–ù–û ‚ÄºÔ∏è/n–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã /nüö´ –õ–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ (–ø–æ—Ä–æ—à–æ–∫, —Ç–∞–±–ª–µ—Ç–∫–∏, –∂–∏–¥–∫–∏–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞)/nüö´ –í—Å–µ –≤–∏–¥—ã –∂–∏–¥–∫–∏—Ö –≤–µ—â–µ—Å—Ç–≤ (–ø–∞—Ä—Ñ—é–º, –∞—Ä–æ–º–∞—Ç–∏–∑–∞—Ç–æ—Ä—ã –∏ —Ç–¥)/nüö´ –í—Å–µ –≤–∏–¥—ã —Ö–æ–ª–æ–¥–Ω–æ–≥–æ –æ—Ä—É–∂–∏—è (–Ω–æ–∂–∏, —ç–ª–µ–∫—Ç—Ä–æ—à–æ–∫–µ—Ä—ã , –±–∏—Ç—ã –∏ —Ç.–¥)/n üö´ –ù–µ –ø—Ä–∏–Ω–∏–º–∞–µ–º —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ —Å–∏–≥–∞—Ä–µ—Ç—ã, –∫–∞–ª—å—è–Ω—ã –∏ —Ç.–¥/nüö´ –¢–û–í–ê–†–´ –° –ü–†–ò–ó–ù–ê–ö–ê–ú–ò 18+ /nüö´ –°–º–∞—Ä—Ç—Ñ–æ–Ω ( —Ç–µ–ª–µ—Ñ–æ–Ω—ã ) –∏ –Ω–æ—É—Ç–±—É–∫/n/n–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –≤–µ—â–∏ –¥–ª—è –ø–µ—Ä–µ–≤–æ–∑–∫–∏ –≤ –ê–í–ò–ê—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–±–ª—é–¥–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞./n–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ –≤–µ—â–∏ üö´/n–•–æ–ª–æ–¥–Ω–æ–µ –æ—Ä—É–∂–∏–µ üó°Ô∏è/n–•–∏–º–∏—á–µ—Å–∫–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞ üß™/n–ë–∞–ª–ª–æ–Ω —Å –¥–∏—Ö–ª–æ—Ñ–æ—Å–æ–º (–≥–∞–∑) üß¥/n–í–µ—â–∏ 18+ üîû/n–õ—é–±—ã–µ –æ–ø–∞—Å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã ‚ö†Ô∏è/n–° –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞–º–∏ üîã/n–í—Å–µ —ç—Ç–∏ –≤–µ—â–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã ‚ùå"
        await update.message.reply_text(response)

    elif text == "–ö–æ–Ω—Ç–∞–∫—Ç üë§":
        response = "–ö–æ–Ω—Ç–∞–∫—Ç : www.instagram.com/somon_sugd_cargo \n –¢–µ–ª–µ—Ñ–æ–Ω +992990050500 Whatsapp, Telegram "
        await update.message.reply_text(response)

    elif text == "–¢–∞—Ñ—Ç–∏—à–∏ —Ç—Ä–µ–∫-–∫–æ–¥ üîç":
        response = "–¢—Ä–µ–∫-–∫–æ–¥–∏ —Ö—É–¥—Ä–æ –≤–æ—Ä–∏–¥ –Ω–∞–º–æ–µ–¥:"
        await update.message.reply_text(response)

    elif text == "–î–∞—Ä—Å–∏ —Ä–æ–π–≥–æ–Ω!":
        response = " –î–∞—Ä—Å—Ö–æ–∏ —Ä–æ–π–≥–æ–Ω—Ä–æ –∞–∑ –∏–Ω—á–æ –¥–∞—Å—Ç—Ä–∞—Å –∫—É–Ω–µ–¥: https://t.me/somon_sugd_cargo/31"
        await update.message.reply_text(response)

    else:
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç –Ω–∏ —Å –æ–¥–Ω–æ–π –∏–∑ –∫–æ–º–∞–Ω–¥ –∫–Ω–æ–ø–æ–∫, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ —Ç—Ä–µ–∫-–∫–æ–¥–æ–º
        await check_track_code(update, context)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–∫-–∫–æ–¥–∞
# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–∫-–∫–æ–¥–∞
async def check_track_code(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    track_code = update.message.text
    logger.info(f"–ü–æ–ª—É—á–µ–Ω —Ç—Ä–µ–∫-–∫–æ–¥: {track_code}")

    # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ —Ç—Ä–µ–∫-–∫–æ–¥–∞
    result = data[data['code'] == track_code]
    logger.info(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞: {result}")

    if not result.empty:
        status_china = result['china'].values[0]
        status_khujand = result['khujand'].values[0]
        arrival_date = result['arrival_date'].values[0]  # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞—Ç—É –ø—Ä–∏–±—ã—Ç–∏—è –Ω–∞ —Å–∫–ª–∞–¥

        if status_khujand:
            response = f"–ë–æ—Ä–∏ –®—É–º–æ –±–æ —Ç—Ä–µ–∫-–∫–æ–¥–∏ {track_code} –±–∞ –•—É—á–∞–Ω–¥ –æ–º–∞–¥–∞–∞—Å—Ç, –º—É–Ω—Ç–∞–∑–∏—Ä–∏ –∑–∞–Ω–≥ —à–∞–≤–µ–¥."
        elif status_china:
            response = (f"–ë–æ—Ä–∏ –®—É–º–æ –±–æ —Ç—Ä–µ–∫-–∫–æ–¥–∏ {track_code} –±–∞ —Å–∫–ª–∞–¥–∏ –•–∏—Ç–æ–π —Å–∞–Ω–∞–∏ {arrival_date} –∫–∞–±—É–ª —à—É–¥–∞–∞—Å—Ç –≤–∞ —Ä—É–∑—Ö–æ–∏ –Ω–∞–∑–¥–∏–∫ –±–∞ –•—É—á–∞–Ω–¥ –æ–º–∞–¥–∞ –º–µ—Ä–∞—Å–∞–¥.")
        else:
            response = f"–ë–æ—Ä–∏ –®—É–º–æ –±–æ —Ç—Ä–µ–∫-–∫–æ–¥–∏ {track_code} —Ö–æ–ª–æ –±–∞ —Å–∫–ª–∞–¥–∏ –•–∏—Ç–æ–π –∫–∞–±—É–ª –Ω–∞—à—É–∞–∞—Å—Ç."
    else:
        response = f"–ë–æ—Ä–∏ –®—É–º–æ –±–æ —Ç—Ä–µ–∫-–∫–æ–¥–∏ {track_code} —Ö–æ–ª–æ –±–∞ —Å–∫–ª–∞–¥–∏ –•–∏—Ç–æ–π –∫–∞–±—É–ª –Ω–∞—à—É–∞–∞—Å—Ç."

    logger.info(f"–û—Ç–≤–µ—Ç: {response}")
    await update.message.reply_text(response)



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text('–ù–∞–ø–∏—à–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π.')


# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    # –í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ —Ç–æ–∫–µ–Ω, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç @BotFather
    TOKEN = '7463604205:AAFX7fk2JTk3UHrZQp0NBl9w9KOfebVBXd0'

    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Application –∏ –ø–µ—Ä–µ–¥–∞–µ–º –µ–º—É —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞.
    application = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–æ–∫ –∏ —Ç—Ä–µ–∫-–∫–æ–¥–æ–≤
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_buttons))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()


if __name__ == '__main__':
    main() 
